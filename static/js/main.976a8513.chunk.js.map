{"version":3,"sources":["data/columns.js","data/query.js","constants/resourceRichnessTypes.js","components/common/form/Autocomplete.js","components/common/form/SelectWithChips.js","components/common/form/Slider.js","components/common/table/Table.js","components/planetaryProduction/PlanetaryProductionPage.js","components/planetaryProduction/renderSystemCells.js","App.js","serviceWorker.js","index.js"],"names":["COL","Region","Constellation","System","Security","Neighbors","Planets","Planet","PlanetType","Resources","Resource","Richness","Output","AbsRich","systems","data","calculatePaths","from","maxJumps","start","performance","now","queue","max","jumps","push","console","log","c","length","node","shift","system","next","end","matchingProduction","range","security","richness","resourceList","inRange","minRange","maxRange","minSecurity","maxSecurity","sys","parseInt","systemsWithinRange","minRich","maxRich","matches","id","planets","planet","resources","resource","includes","absRich","Autocomplete","label","limit","rest","Grid","item","xs","md","lg","filterOptions","createFilterOptions","renderInput","params","TextField","variant","defaultProps","renderValue","values","container","spacing","map","value","key","Chip","SelectWithChips","onChange","options","labelId","FormControl","fullWidth","InputLabel","Select","displayEmpty","multiple","event","target","option","MenuItem","Slider","valueLabelDisplay","DataTable","cells","title","useState","page","setPage","rowsPerPage","setRowsPerPage","Typography","gutterBottom","Paper","TableContainer","Table","TableHead","TableRow","cell","index","TableCell","header","renderHeaders","TableBody","startIndex","endIndex","slice","row","rowIndex","cellIndex","attribute","getAttribute","display","style","width","renderRows","TablePagination","component","count","onChangePage","onChangeRowsPerPage","newRowsPerPage","rowsPerPageOptions","usePersistedState","defaultValue","React","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","PlanetaryProductionPage","baseSystem","setBaseSystem","distanceRange","setDistanceRange","securityRange","setSecurityRange","richnessRange","setRichnessRange","setResources","distanceMax","useMemo","resourceNames","Object","keys","maxOutput","s","region","constellation","query","distanceMarks","marks","Array","Math","round","getOptionLabel","min","step","theme","createMuiTheme","palette","type","App","ThemeProvider","CssBaseline","Container","maxWidth","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.976a8513.chunk.js","sourcesContent":["const COL = {\r\n    Region: 0,\r\n    Constellation: 1,\r\n    System: 2,\r\n    Security: 3,\r\n    Neighbors: 4,\r\n    Planets: 5,\r\n\r\n    Planet: 0,\r\n    PlanetType: 1,\r\n    Resources: 2,\r\n\r\n    Resource: 0,\r\n    Richness: 1,\r\n    Output: 2,\r\n    AbsRich: 3\r\n};\r\n\r\nexport default COL;\r\n","import data from './data.json';\r\nimport c from './columns.js';\r\n\r\nlet systems = data.data;\r\n\r\nfunction calculatePaths(from, maxJumps) {\r\n    let start = performance.now();\r\n    let queue = [];\r\n    let max = 0;\r\n    let jumps = {[from]: 0};\r\n    queue.push(from);\r\n    console.log(\"Neighbors\", c);\r\n    while (queue.length > 0) {\r\n        let node = queue.shift();\r\n        if (maxJumps && jumps[node] === maxJumps) continue;\r\n        let system = systems[node];\r\n        //console.log(node, system);\r\n        for (let next of system[c.Neighbors]) {\r\n            if (!(next in jumps)) {\r\n                max = jumps[next] = jumps[node] + 1;\r\n                queue.push(next);\r\n            }\r\n        }\r\n    }\r\n    let end = performance.now();\r\n    console.log(jumps);\r\n    console.log(max);\r\n    console.log(`calculatePaths time: ${end - start} ms`);\r\n    return [jumps, max];\r\n}\r\n\r\nexport function longestPath(from) {\r\n    return calculatePaths(from)[1];\r\n}\r\n\r\nexport function systemsWithinRange(from, range, security) {\r\n    let [minRange, maxRange] = range;\r\n    let [minSecurity, maxSecurity] = security;\r\n    if (!minRange) minRange = 0;\r\n    let [jumps] = calculatePaths(from, maxRange);\r\n    let sys = [];\r\n    for (let system in jumps) {\r\n        if (jumps[system] >= minRange &&\r\n            systems[system][c.Security] >= minSecurity &&\r\n            systems[system][c.Security] <= maxSecurity\r\n            )\r\n            sys.push({system: parseInt(system), jumps: jumps[system]});\r\n    }\r\n    return sys;\r\n}\r\n\r\nexport function matchingProduction(from, range, security, richness, resourceList) {\r\n    let inRange = systemsWithinRange(from, range, security);\r\n    let [minRich, maxRich] = richness;\r\n    let matches = [];\r\n    for (let {system: id, jumps} of inRange) {\r\n        let system = systems[id];\r\n        let planets = system[c.Planets];\r\n        for (let planet of planets) {\r\n            let resources = planet[c.Resources];\r\n            for (let resource of resources) {\r\n                if (!resourceList.includes(resource[c.Resource]))\r\n                    continue;\r\n                let absRich = resource[c.AbsRich];\r\n                if (absRich >= minRich && absRich <= maxRich) {\r\n                    matches.push({\r\n                        resource: resource[c.Resource],\r\n                        planet: planet[c.Planet],\r\n                        security: system[c.Security],\r\n                        jumps,\r\n                        richness: absRich\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return matches;\r\n}\r\n\r\nexport function getSystems() {\r\n    return systems.map(s => (\r\n        {\r\n            label: `${s[c.Region]} > ${s[c.Constellation]} > ${s[c.System]}`,\r\n            region: s[c.Region],\r\n            constellation: s[c.Constellation],\r\n            system: s[c.System],\r\n            security: s[c.Security]\r\n        }\r\n    ));\r\n}\r\n\r\nexport function getResources() {\r\n    return Object.keys(data.maxOutput);\r\n}\r\n\r\nexport function getResourceMaxOutput() {\r\n    let maxOutput = {}\r\n    for (let i = 0; i < data.resources.length; i++)\r\n        maxOutput[data.resources[i]] = data.maxOutput[i];\r\n    return maxOutput;\r\n}","const resourceRichnessTypes = [\n    'Perfect',\n    'Rich',\n    'Medium',\n    'Poor',\n];\n\nexport default resourceRichnessTypes;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUIAutocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { Grid, TextField } from '@material-ui/core';\n\nfunction Autocomplete({ label, limit, ...rest }) {\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <MUIAutocomplete\n        {...rest}\n        filterOptions={createFilterOptions({limit})}\n        renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n      />\n    </Grid>\n  );\n}\n\nAutocomplete.defaultProps = {\n  limit: 100,\n};\n\nAutocomplete.propTypes = {\n  getOptionLabel: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  limit: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default Autocomplete;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Chip,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from '@material-ui/core';\n\nfunction renderValue(values) {\n  return (\n    <Grid container spacing={1}>\n      {values.map((value) => (\n        <Grid item key={value}>\n          <Chip label={value} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nfunction SelectWithChips({ id, label, onChange, options, ...rest }) {\n  const labelId = `${id}-label`;\n\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <FormControl fullWidth>\n        <InputLabel id={labelId}>{label}</InputLabel>\n        <Select\n          {...rest}\n          displayEmpty\n          id={id}\n          labelId={labelId}\n          multiple\n          onChange={(event) => onChange(event, event.target.value)}\n          renderValue={renderValue}\n        >\n          {options.map((option) => (\n            <MenuItem\n              key={option}\n              value={option}\n            >\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Grid>\n  );\n}\n\nSelectWithChips.propTypes = {\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default SelectWithChips;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Grid,\n  InputLabel,\n  Slider as MUISlider,\n} from '@material-ui/core';\n\nfunction Slider({ label, ...rest }) {\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <InputLabel>{label}</InputLabel>\n      <MUISlider {...rest} />\n    </Grid>\n  );\n}\n\nSlider.defaultProps = {\n  valueLabelDisplay: 'auto',\n};\n\nSlider.propTypes = {\n  label: PropTypes.string,\n  marks: PropTypes.array,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  step: PropTypes.number,\n  value: PropTypes.any.isRequired,\n  valueLabelDisplay: PropTypes.string,\n};\n\nexport default Slider;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\n\nfunction renderHeaders(cells, data) {\n  return cells.map((cell, index) => (\n    <TableCell key={index}>{cell.header}</TableCell>\n  ));\n}\n\nfunction renderRows({ cells, data, page, rowsPerPage }) {\n  const startIndex = page * rowsPerPage;\n  const endIndex = startIndex + rowsPerPage;\n  return data.slice(startIndex, endIndex).map((row, rowIndex) => (\n    <TableRow key={rowIndex}>\n      {cells.map((cell, cellIndex) => {\n        const attribute = cell.getAttribute(row);\n        const display = cell.display ? cell.display(attribute) : attribute;\n\n        const style = {};\n        if (cell.width) style.width = cell.width;\n\n        return (\n          <TableCell\n            key={cellIndex}\n            style={style}\n          >\n            {display}\n          </TableCell>\n        );\n      })}\n    </TableRow>\n  ));\n}\n\nfunction DataTable({ cells, data, title }) {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  function handleChangeRowsPerPage(event) {\n    const startIndex = page * rowsPerPage;\n    const newRowsPerPage = event.target.value;\n    const newPage = startIndex / newRowsPerPage;\n    setPage(newPage);\n    setRowsPerPage(newRowsPerPage);\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n      <Paper>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {renderHeaders(cells, data)}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {renderRows({ cells, data, page, rowsPerPage })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n          <TablePagination\n            component=\"div\"\n            count={data.length}\n            onChangePage={(event, value) => setPage(value)}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n      </Paper>\n    </Grid>\n  );\n}\n\nDataTable.defaultProps = {\n  cells: [],\n  data: [],\n};\n\nDataTable.propTypes = {\n  cells: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n};\n\nexport default DataTable;","import React, { useMemo, useEffect } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport * as query from '../../data/query';\nimport resourceRichnessTypes from '../../constants/resourceRichnessTypes';\nimport {\n  Autocomplete,\n  SelectWithChips,\n  Slider,\n} from '../common/form';\nimport { Table } from '../common/table';\nimport renderSystemCells from './renderSystemCells';\n\nfunction usePersistedState(key, defaultValue) {\n  const [state, setState] = React.useState(\n    () => JSON.parse(localStorage.getItem(key)) || defaultValue\n  );\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n}\n\nfunction PlanetaryProductionPage() {\n  const [baseSystem, setBaseSystem] = usePersistedState(\"baseSystem\", 0);\n  const [distanceRange, setDistanceRange] = usePersistedState(\"distanceRange\", [0, 10]);\n  const [securityRange, setSecurityRange] = usePersistedState(\"securityRange\", [0.5, 1.0]);\n  const [richnessRange, setRichnessRange] = usePersistedState(\"richnessRange\", [90, 200]);\n  const [resources, setResources] = usePersistedState(\"resources\", [\"Lustering Alloy\"]);\n  console.log(baseSystem, distanceRange, securityRange, richnessRange, resources);\n  \n  const distanceMax = useMemo(() => query.longestPath(baseSystem), [baseSystem]);\n  const resourceNames = useMemo(() => query.getResources(), []);\n  const systems = useMemo(() => query.getSystems(), []);\n\n  const matches = useMemo(() => {\n    return query.matchingProduction(baseSystem, distanceRange, securityRange, richnessRange, resources);\n  }, [baseSystem, distanceRange, securityRange, richnessRange]);\n\n  const distanceMarks = useMemo(() => {\n    const marks = [...Array(Math.round(distanceMax / 10)).keys()].map((value) => ({ value: value * 10, label: value * 10 }));\n    if (marks[-1] !== distanceMax) {\n      marks.push({ value: distanceMax, label: distanceMax });\n    }\n    return marks;\n  }, [distanceMax]);\n\n  return (\n    <Grid container spacing={4}>\n\n      <Grid item xs={12} md={12} lg={12}>\n        <Typography variant=\"h4\" width={1}>EVE Echoes</Typography>\n        <Typography variant=\"h5\" width={1}>Planetary Production</Typography>\n      </Grid>\n\n      <Autocomplete\n        getOptionLabel={(option) => systems[option].label}\n        label=\"Base System\"\n        onChange={(event, value) => setBaseSystem(value)}\n        options={systems.map((system, index) => index)}\n        value={baseSystem}\n      />\n\n      <Slider\n        label=\"Distance to System (jumps)\"\n        marks={distanceMarks}\n        max={distanceMax}\n        min={0}\n        onChange={(event, value) => setDistanceRange(value)}\n        step={1}\n        value={distanceRange}\n      />\n\n      <Slider\n        label=\"System Security\"\n        marks={[{ value:-1.0, label: '-1.0' }, { value: 0, label: '0.0' }, { value:0.5, label:'0.5' }, { value:1, label: '1.0' }]}\n        max={1.0}\n        min={-1.0}\n        onChange={(event, value) => setSecurityRange(value)}\n        step={0.1}\n        value={securityRange}\n      />\n\n      <SelectWithChips\n        id=\"resources\"\n        label=\"Resource Types\"\n        onChange={(event, value) => setResources(value)}\n        options={resourceNames}\n        value={resources}\n      />\n\n      <Slider\n        label=\"Resource Richness\"\n        marks={[{ value:25, label: '25' }, { value: 100, label: 'high sec' }, { value:133, label:'low sec' }, { value:200, label: '200' }]}\n        max={200}\n        min={25}\n        onChange={(event, value) => setRichnessRange(value)}\n        step={1}\n        value={richnessRange}\n      />\n\n      <Table\n        cells={renderSystemCells()}\n        data={matches}\n        title=\"Systems\"\n      />\n\n    </Grid>\n  );\n}\n\nexport default PlanetaryProductionPage;\n","export default function renderSystemCells() {\n  return [\n    // render pattern:\n    // {\n    //   cell: (row) => row.nameOfAttribute, // specify attribute\n    //   display: (data) => `${data}`, // optional: specify cell's display\n    //   header: 'Header Name', // specify column header,\n    //   width: 100, // optional: specify column width (integers are in px)\n    // },\n    {\n      getAttribute: (data) => data.resource,\n      header: 'Resource',\n      width: '29%',\n    },\n    {\n      getAttribute: (data) => data.planet,\n      header: 'Planet',\n      width: '29%',\n    },\n    {\n      getAttribute: (data) => data.security,\n      header: 'Security',\n      width: '14%',\n    },\n    {\n      getAttribute: (data) => data.jumps,\n      header: 'Jumps',\n      width: '14%',\n    },\n    {\n      getAttribute: (data) => data.richness,\n      header: 'Richness',\n      width: '14%',\n    },\n  ];\n}","import React from 'react';\nimport { Container, CssBaseline } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport PlanetaryProductionPage from './components/planetaryProduction/PlanetaryProductionPage';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" style={{ marginTop: 16 }}>\n        <PlanetaryProductionPage />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}