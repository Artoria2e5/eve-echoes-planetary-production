{"version":3,"sources":["helpers/usePersistedStorage.js","components/common/form/Autocomplete.js","components/common/form/SelectWithChips.js","components/common/form/Slider.js","components/common/table/PaginatedTable.js","components/common/table/VirtualizedTable.js","components/common/tabs/Tabs.js","components/planetaryProduction/renderSystemColumns.js","components/planetaryProduction/renderOverviewColumns.js","components/planetaryProduction/PlanetaryProductionPage.js","data/query.js","App.js","serviceWorker.js","index.js"],"names":["usePersistedState","key","defaultValue","useState","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","Autocomplete","label","limit","rest","Grid","item","xs","md","lg","filterOptions","createFilterOptions","renderInput","params","TextField","variant","defaultProps","renderValue","values","container","spacing","map","value","Chip","SelectWithChips","id","onChange","options","labelId","FormControl","fullWidth","InputLabel","Select","displayEmpty","multiple","event","target","option","MenuItem","Slider","valueLabelDisplay","PaginatedTable","columns","data","direction","setDirection","length","dataKey","undefined","orderBy","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","sortedData","useMemo","sort","a","b","modifier","TableContainer","Table","TableHead","TableRow","onChangeSort","column","index","sortable","active","TableCell","align","numeric","sortDirection","TableSortLabel","onClick","renderHeaders","TableBody","startIndex","endIndex","slice","row","rowIndex","columnIndex","attribute","display","style","width","renderRows","TablePagination","component","count","onChangePage","onChangeRowsPerPage","newRowsPerPage","rowsPerPageOptions","useStyles","makeStyles","theme","createStyles","flexContainer","alignItems","boxSizing","root","height","marginBottom","table","flip","paddingRight","tableRow","cursor","tableRowHover","backgroundColor","palette","grey","tableCell","flex","noClick","VirtualizedTable","headerHeight","onRowClick","rowHeight","classes","cellClasses","classNames","getRowClassName","useCallback","renderCell","cellData","className","renderHeader","screenHeight","screenWidth","gridStyle","noRowsRenderer","rowClassName","rowCount","rowGetter","columnWidth","cellRenderer","headerRenderer","headerProps","Number","isInteger","maxHeight","paper","flexGrow","Tabs","children","tabs","currentTab","setCurrentTab","Paper","centered","tab","renderSystemColumns","renderOverviewColumns","query","Comlink","Worker","PlanetaryProductionPage","console","log","baseSystem","setBaseSystem","distanceRange","setDistanceRange","securityRange","setSecurityRange","richnessRange","setRichnessRange","resources","setResources","planetology","setPlanetology","bestMatches","setBestMatches","working","setWorking","distanceMax","setDistanceMax","resourceNames","setResourceNames","systems","setSystems","matches","setMatches","details","setDetails","longestPath","then","m","getResources","r","getSystems","s","matchingProduction","findBestMatches","distanceMarks","marks","Array","Math","round","keys","push","Component","renderColumns","Typography","getOptionLabel","system","max","min","step","LinearProgress","rowData","createMuiTheme","type","App","ThemeProvider","CssBaseline","Container","maxWidth","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.45facdea.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function usePersistedState(key, defaultValue) {\n  const [state, setState] = useState(\n    () => JSON.parse(localStorage.getItem(key)) || defaultValue\n  );\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUIAutocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { Grid, TextField } from '@material-ui/core';\n\nfunction Autocomplete({ label, limit, ...rest }) {\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <MUIAutocomplete\n        {...rest}\n        filterOptions={createFilterOptions({limit})}\n        renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n      />\n    </Grid>\n  );\n}\n\nAutocomplete.defaultProps = {\n  limit: 100,\n};\n\nAutocomplete.propTypes = {\n  getOptionLabel: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  limit: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default Autocomplete;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Chip,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from '@material-ui/core';\n\nfunction renderValue(values) {\n  return (\n    <Grid container spacing={1}>\n      {values.map((value) => (\n        <Grid item key={value}>\n          <Chip label={value} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nfunction SelectWithChips({ id, label, onChange, options, ...rest }) {\n  const labelId = `${id}-label`;\n\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <FormControl fullWidth>\n        <InputLabel id={labelId}>{label}</InputLabel>\n        <Select\n          {...rest}\n          displayEmpty\n          id={id}\n          labelId={labelId}\n          multiple\n          onChange={(event) => onChange(event, event.target.value)}\n          renderValue={renderValue}\n        >\n          {options.map((option) => (\n            <MenuItem\n              key={option}\n              value={option}\n            >\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Grid>\n  );\n}\n\nSelectWithChips.propTypes = {\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default SelectWithChips;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Grid,\n  InputLabel,\n  Slider as MUISlider,\n} from '@material-ui/core';\n\nfunction Slider({ label, ...rest }) {\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <InputLabel>{label}</InputLabel>\n      <MUISlider {...rest} />\n    </Grid>\n  );\n}\n\nSlider.defaultProps = {\n  valueLabelDisplay: 'auto',\n};\n\nSlider.propTypes = {\n  label: PropTypes.string,\n  marks: PropTypes.array,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  step: PropTypes.number,\n  value: PropTypes.any.isRequired,\n  valueLabelDisplay: PropTypes.string,\n};\n\nexport default Slider;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n} from '@material-ui/core';\n\nfunction renderHeaders({ columns, data, direction, onChangeSort, orderBy }) {\n  return columns.map((column, index) => {\n    if (column.sortable) {\n      const active = orderBy === column.dataKey;\n      return (\n        <TableCell\n          align={column.numeric || false ? 'right' : 'left'}\n          key={column.dataKey}\n          sortDirection={active ? direction : false}\n        >\n          <TableSortLabel\n            active={active}\n            direction={active ? direction : 'asc'}\n            onClick={() => onChangeSort(column.dataKey, active ? (direction === 'asc' ? 'desc' : 'asc') : 'asc')}\n          >\n            {column.label}\n          </TableSortLabel>\n        </TableCell>\n      );\n    } else {\n      return <TableCell key={index}>{column.label}</TableCell>;\n    }\n  });\n}\n\nfunction renderRows({ columns, data, page, rowsPerPage }) {\n  const startIndex = page * rowsPerPage;\n  const endIndex = startIndex + rowsPerPage;\n  return data.slice(startIndex, endIndex).map((row, rowIndex) => (\n    <TableRow key={rowIndex}>\n      {columns.map((column, columnIndex) => {\n        const attribute = row[column.dataKey];\n        const display = column.display ? column.display(attribute) : attribute;\n\n        const style = {};\n        if (column.width) style.width = column.width;\n\n        return (\n          <TableCell\n            align={column.numeric || false ? 'right' : 'left'}\n            key={columnIndex}\n            style={style}\n          >\n            {display}\n          </TableCell>\n        );\n      })}\n    </TableRow>\n  ));\n}\n\nfunction PaginatedTable({ columns, data }) {\n  const [direction, setDirection] = useState('asc');\n  const [orderBy, setOrderBy] = useState(columns.length ? columns[0].dataKey : undefined);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const sortedData = useMemo(() => {\n    return [...data].sort((a, b) => {\n      const modifier = direction === 'asc' ? 1 : -1;\n      if (a[orderBy] === b[orderBy]) {\n        return 0;\n      } else {\n        return a[orderBy] > b[orderBy] ? 1 * modifier : -1 * modifier;\n      }\n    });\n  }, [data, direction, orderBy]);\n\n  function handleChangeRowsPerPage(event) {\n    const startIndex = page * rowsPerPage;\n    const newRowsPerPage = event.target.value;\n    const newPage = startIndex / newRowsPerPage;\n    setPage(newPage);\n    setRowsPerPage(newRowsPerPage);\n  }\n\n  function handleChangeSort(orderBy, direction) {\n    setOrderBy(orderBy);\n    setDirection(direction);\n  }\n\n  useEffect(() => {\n    setPage(0);\n  }, [data])\n\n  return (\n    <Grid item xs={12} md={12} lg={12}>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {renderHeaders({\n                columns,\n                data: sortedData,\n                direction,\n                onChangeSort: handleChangeSort,\n                orderBy\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {renderRows({\n              columns,\n              data: sortedData,\n              page,\n              rowsPerPage\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        component=\"div\"\n        count={data.length}\n        onChangePage={(event, value) => setPage(value)}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Grid>\n  );\n}\n\nPaginatedTable.defaultProps = {\n  columns: [],\n  data: [],\n};\n\nPaginatedTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n};\n\nexport default PaginatedTable;","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AutoSizer,\n  Column,\n  Table,\n} from 'react-virtualized';\nimport { TableCell } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/styles';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme) => createStyles({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  },\n  root: {\n    // height = screen height - grid padding\n    height: `calc(100vh - (${theme.spacing(4)}px * 3))`,\n    marginBottom: theme.spacing(4)\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // https://github.com/bvaughn/react-virtualized/issues/454\n    '& .ReactVirtualized__Table__headerRow': {\n      flip: false,\n      paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined,\n    },\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[800],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: 'initial',\n  },\n}));\n\nfunction VirtualizedTable({\n  columns,\n  data,\n  headerHeight,\n  onRowClick,\n  rowHeight,\n}) {\n  const classes = useStyles();\n\n  const cellClasses = classNames(\n    classes.tableCell,\n    classes.flexContainer,\n    {\n      [classes.noClick]: onRowClick == null,\n    },\n  );\n\n  const getRowClassName = useCallback(({ index }) => {\n    return classNames(\n      classes.tableRow,\n      classes.flexContainer,\n      {\n        [classes.tableRowHover]: index !== -1 && onRowClick != null,\n      },\n    );\n  }, [classes, onRowClick]);\n\n  const renderCell = useCallback(({ cellData, columnIndex }) => {\n    return (\n      <TableCell\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\n        component=\"div\"\n        className={cellClasses}\n        style={{ height: rowHeight }}\n        variant=\"body\"\n      >\n        {cellData}\n      </TableCell>\n    )\n  }, [cellClasses, columns, rowHeight]);\n\n  const renderHeader = useCallback(({ columnIndex, label, ...rest }) => {\n    return (\n      <TableCell\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\n        className={classNames(classes.tableCell, classes.flexContainer, classes.noClick)}\n        component=\"div\"\n        style={{ height: headerHeight }}\n        variant=\"head\"\n      >\n        {label}\n      </TableCell>\n    );\n  }, [classes, columns, headerHeight])\n\n  return (\n    <div className={classes.root}>\n      <AutoSizer>\n        {({ height: screenHeight, width: screenWidth }) => {\n          return (\n            <Table\n              className={classes.table}\n              gridStyle={{ direction: 'inherit' }}\n              headerHeight={headerHeight}\n              height={screenHeight}\n              noRowsRenderer={() => <div>No results.</div>}\n              rowClassName={getRowClassName}\n              rowCount={data.length}\n              rowGetter={({index}) => data[index]}\n              rowHeight={rowHeight}\n              width={screenWidth}\n              style={{height: screenWidth > screenHeight ? screenHeight : screenHeight}}\n              onRowClick={onRowClick}\n            >\n              {columns.map(({ dataKey, width: columnWidth, ...rest }, index) => {\n                return (\n                  <Column\n                    cellRenderer={renderCell}\n                    className={classes.flexContainer}\n                    dataKey={dataKey}\n                    headerRenderer={(headerProps) => renderHeader({ ...headerProps, columnIndex: index })}\n                    key={dataKey}\n                    width={Number.isInteger(columnWidth) ? columnWidth : columnWidth * screenWidth}\n                    {...rest}\n                  />\n                )\n              })}\n            </Table>\n          );\n        }}\n      </AutoSizer>\n    </div>\n  );\n}\n\nVirtualizedTable.defaultProps = {\n  columns: [],\n  data: [],\n  headerHeight: 48,\n  rowHeight: 48,\n};\n\nVirtualizedTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number,\n};\n\nexport default VirtualizedTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  Paper,\n  Tab as MUITab,\n  Tabs as MUITabs,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport usePersistedState from '../../../helpers/usePersistedStorage';\n\nconst useStyles = makeStyles({\n  root: {\n    maxHeight: '100vh',\n  },\n  paper: {\n    flexGrow: 1,\n  },\n});\n\nfunction Tabs({ children, tabs }) {\n  const [currentTab, setCurrentTab] = usePersistedState('currentTab', 0);\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={classes.root}\n      item\n      lg={12}\n      md={12}\n      xs={12}\n    >\n      <Paper className={classes.paper}>\n        <MUITabs\n          centered\n          onChange={(event, index) => setCurrentTab(index)}\n          value={currentTab}\n          variant=\"fullWidth\"\n        >\n          {tabs.map((tab, index) => (\n            <MUITab\n              key={index}\n              label={tab.label}\n            />\n          ))}\n        </MUITabs>\n      </Paper>\n      {children[currentTab]}\n    </Grid>\n  );\n}\n\nTabs.defaultProps = {\n  children: [],\n  tabs: [],\n};\n\nTabs.propTypes = {\n  children: PropTypes.array.isRequired,\n  tabs: PropTypes.array.isRequired,\n};\n\nexport default Tabs;\n","export default function renderSystemColumns() {\n  return [\n    // render pattern:\n    // {\n    //   dataKey: 'attributeName' // specify attribute\n    //   display: (data) => `${data}`, // optional: specify cell's display\n    //   label: 'Header Name', // specify column label,\n    //   sortable: true, // optional; boolean\n    // column width:\n    // - integer = px\n    // - float/fraction = percentage of screen width\n    //   width: 100, \n    // },\n    {\n      dataKey: 'resource',\n      label: 'Resource',\n      sortable: true,\n      width: 0.29,\n    },\n    {\n      dataKey: 'planet',\n      label: 'Planet',\n      sortable: true,\n      width: 0.29,\n    },\n    {\n      dataKey: 'security',\n      label: 'Security',\n      numeric: true,\n      sortable: true,\n      width: 0.14,\n    },\n    {\n      dataKey: 'jumps',\n      label: 'Jumps',\n      numeric: true,\n      sortable: true,\n      width: 0.14,\n    },\n    {\n      dataKey: 'richness',\n      label: 'Richness',\n      numeric: true,\n      sortable: true,\n      width: 0.14,\n    },\n  ];\n}","export default function renderOverviewColumns() {\n  return [\n    {\n      dataKey: 'totalRichness',\n      label: 'Total Richness',\n      sortable: true,\n      width: 0.25,\n    },\n    {\n      dataKey: 'roundTrip',\n      label: 'Round Trip',\n      sortable: true,\n      width: 0.25,\n    },\n    {\n      dataKey: 'planets',\n      label: 'Planets',\n      sortable: true,\n      width: 0.25,\n    },\n    {\n      dataKey: 'systems',\n      label: 'systems',\n      sortable: true,\n      width: 0.25,\n    },\n  ];\n}\n","import React, { useMemo, useState, useEffect } from 'react';\nimport {\n  Grid,\n  Typography,\n  LinearProgress,\n} from '@material-ui/core';\n\nimport * as Comlink from 'comlink';\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Query from 'worker-loader!../../data/query';\nimport usePersistedState from '../../helpers/usePersistedStorage';\nimport {\n  Autocomplete,\n  SelectWithChips,\n  Slider,\n} from '../common/form';\nimport { VirtualizedTable } from '../common/table';\nimport { Tabs } from '../common/tabs';\nimport renderSystemColumns from './renderSystemColumns';\nimport renderOverviewColumns from './renderOverviewColumns';\nconst query = Comlink.wrap(new Query());\n\nfunction PlanetaryProductionPage() {\n  console.log(\"render Planetary Production Page\");\n  const [baseSystem, setBaseSystem] = usePersistedState('baseSystem', 0);\n  const [distanceRange, setDistanceRange] = usePersistedState('distanceRange', [0, 10]);\n  const [securityRange, setSecurityRange] = usePersistedState('securityRange', [0.5, 1.0]);\n  const [richnessRange, setRichnessRange] = usePersistedState('richnessRange', [90, 200]);\n  const [resources, setResources] = usePersistedState('resources', ['Lustering Alloy']);\n  const [planetology, setPlanetology] = usePersistedState('planetology', 1);\n  const [bestMatches, setBestMatches] = useState([]);\n  const [working, setWorking] = useState(false);\n  const [distanceMax, setDistanceMax] = useState(65);\n  const [resourceNames, setResourceNames] = useState(['Lustering Alloy']);\n  const [systems, setSystems] = useState([]);\n  const [matches, setMatches] = useState([]);\n  const [details, setDetails] = useState([]);\n  console.log(baseSystem, distanceRange, securityRange, richnessRange, resources);\n  \n  useEffect(() => { query.longestPath(baseSystem).then(m => setDistanceMax(m)) }, [baseSystem]);\n  useEffect(() => { query.getResources().then(r => setResourceNames(r)) }, []);\n  useEffect(() => { query.getSystems().then(s => setSystems(s)) }, []);\n\n  useEffect(() => {\n    query.matchingProduction(baseSystem, distanceRange, securityRange, richnessRange, resources)\n      .then(m => {setMatches(m); setDetails(m);});\n  }, [baseSystem, distanceRange, securityRange, resources, richnessRange]);\n\n  useEffect(() => {\n    query.findBestMatches(matches, baseSystem, resources, planetology, Comlink.proxy(setBestMatches), Comlink.proxy(setWorking))\n  }, [matches, baseSystem, resources, planetology]);\n\n  const distanceMarks = useMemo(() => {\n    const marks = [...Array(Math.round(distanceMax / 10)).keys()].map((value) => ({ value: value * 10, label: value * 10 }));\n    if (marks[-1] !== distanceMax) {\n      marks.push({ value: distanceMax, label: distanceMax });\n    }\n    return marks;\n  }, [distanceMax]);\n\n  const tableConfigs = useMemo(() => [\n    {\n      Component: VirtualizedTable,\n      data: bestMatches,\n      label: 'Overview',\n      renderColumns: renderOverviewColumns,\n    },\n    {\n      Component: VirtualizedTable,\n      data: matches,\n      label: 'Systems',\n      renderColumns: renderSystemColumns,\n    },\n  ], [bestMatches, matches]);\n\n  console.log(\"working\", working);\n  if (systems.length === 0)\n    return (<Typography>Loading...</Typography>);\n  return (\n    <Grid container spacing={4}>\n\n      <Grid item xs={12} md={12} lg={12}>\n        <Typography variant=\"h4\" width={1}>EVE Echoes</Typography>\n        <Typography variant=\"h5\" width={1}>Planetary Production</Typography>\n      </Grid>\n\n      <Autocomplete\n        getOptionLabel={(option) => systems[option].label}\n        label=\"Base System\"\n        onChange={(event, value) => setBaseSystem(value)}\n        options={systems.map((system, index) => index)}\n        value={baseSystem}\n      />\n\n      <Slider\n        label=\"Distance to System (jumps)\"\n        marks={distanceMarks}\n        max={distanceMax}\n        min={0}\n        onChange={(event, value) => setDistanceRange(value)}\n        step={1}\n        value={distanceRange}\n      />\n\n      <Slider\n        label=\"System Security\"\n        marks={[{ value:-1.0, label: '-1.0' }, { value: 0, label: '0.0' }, { value:0.5, label:'0.5' }, { value:1, label: '1.0' }]}\n        max={1.0}\n        min={-1.0}\n        onChange={(event, value) => setSecurityRange(value)}\n        step={0.1}\n        value={securityRange}\n      />\n\n      <SelectWithChips\n        id=\"resources\"\n        label=\"Resource Types\"\n        onChange={(event, value) => setResources(value)}\n        options={resourceNames}\n        value={resources}\n      />\n\n      <Slider\n        label=\"Resource Richness\"\n        marks={[{ value:25, label: '25' }, { value: 100, label: 'high sec' }, { value:133, label:'low sec' }, { value:200, label: '200' }]}\n        max={200}\n        min={25}\n        onChange={(event, value) => setRichnessRange(value)}\n        step={1}\n        value={richnessRange}\n      />\n\n      <Slider\n        label=\"Planets (Planetology max development)\"\n        marks={[{ value:1, label: '1' }, { value: 6, label: '6' }]}\n        max={6}\n        min={1}\n        onChange={(event, value) => setPlanetology(value)}\n        step={1}\n        value={planetology}\n      />\n\n      <Grid item xs={12}>\n        <LinearProgress value={100} variant={working ? 'indeterminate' : 'determinate'}/>\n      </Grid>\n\n      {/*\n      <Tabs tabs={tableConfigs}>\n        {tableConfigs.map((tab) => (\n          <tab.Component\n            columns={tab.renderColumns()}\n            data={tab.data}\n          />\n        ))}\n      </Tabs>      \n      */}\n      <Grid item xs={12} lg={6}>\n        <VirtualizedTable data={bestMatches} columns={renderOverviewColumns()} onRowClick={({rowData}) => setDetails(rowData.matches)}/>\n      </Grid>\n      <Grid item xs={12} lg={6}>\n        <VirtualizedTable data={details} columns={renderSystemColumns()}/>\n      </Grid>\n\n    </Grid>\n  );\n}\n\nexport default PlanetaryProductionPage;\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/query.a67a65be.worker.js\");\n}\n","import React from 'react';\nimport { Container, CssBaseline } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport PlanetaryProductionPage from './components/planetaryProduction/PlanetaryProductionPage';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" style={{ marginTop: 16 }}>\n        <PlanetaryProductionPage />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}