{"version":3,"sources":["helpers/usePersistedStorage.js","components/common/form/Autocomplete.js","components/common/form/SelectWithChips.js","components/common/form/Slider.js","components/common/table/PaginatedRow.js","components/common/table/PaginatedTable.js","components/common/table/TableHeader.js","components/common/table/VirtualizedTable.js","components/common/tabs/Tabs.js","components/planetaryProduction/PlanetaryProductionPage.js","data/query.js","components/planetaryProduction/renderOverviewColumns.js","components/planetaryProduction/renderSystemColumns.js","App.js","serviceWorker.js","index.js"],"names":["usePersistedState","key","defaultValue","useState","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","Autocomplete","label","limit","rest","Grid","item","xs","md","lg","filterOptions","createFilterOptions","renderInput","params","TextField","variant","defaultProps","renderValue","values","container","spacing","map","value","Chip","SelectWithChips","id","onChange","options","labelId","FormControl","fullWidth","InputLabel","Select","displayEmpty","multiple","event","target","option","MenuItem","Slider","valueLabelDisplay","PaginatedRow","columns","data","page","rowsPerPage","startIndex","endIndex","slice","row","rowIndex","TableRow","column","columnIndex","attribute","dataKey","display","style","width","TableCell","align","numeric","PaginatedTable","sortDirection","direction","setDirection","length","undefined","orderBy","setOrderBy","setPage","setRowsPerPage","sortedData","useMemo","sort","a","b","modifier","handleChangeSort","TableContainer","Table","TableHead","index","onChangeSort","TableBody","TablePagination","component","count","onChangePage","onChangeRowsPerPage","newRowsPerPage","rowsPerPageOptions","TableHeader","columnData","disableSort","sortBy","active","cellProps","sortable","children","TableSortLabel","onClick","useStyles","makeStyles","theme","createStyles","flexContainer","alignItems","boxSizing","root","height","marginBottom","table","flip","paddingRight","tableRow","cursor","tableRowHover","backgroundColor","palette","grey","tableCell","flex","title","marginLeft","noClick","VirtualizedTable","headerHeight","onRowClick","rowHeight","selectedId","classes","cellClasses","classNames","getRowClassName","useCallback","renderCell","cellData","className","renderHeader","screenHeight","screenWidth","Typography","gutterBottom","gridStyle","noRowsRenderer","rowClassName","rowCount","rowGetter","rowStyle","rendererProps","cellRenderer","headerRenderer","headerProps","Number","isInteger","Tabs","props","currentTab","setCurrentTab","bind","this","subNav","tabs","Paper","paper","centered","tab","React","Component","withStyles","maxHeight","flexGrow","query","Comlink","Worker","pageLoading","flexDirection","justifyContent","test","PlanetaryProductionPage","baseSystem","setBaseSystem","distanceRange","setDistanceRange","securityRange","setSecurityRange","richnessRange","setRichnessRange","resources","setResources","planetology","setPlanetology","roundTripJumps","setRoundTripJumps","bestMatches","setBestMatches","working","setWorking","distanceMax","setDistanceMax","resourceNames","setResourceNames","systems","setSystems","matches","setMatches","details","setDetails","setSelectedId","isSmallScreen","useMediaQuery","breakpoints","down","tabRef","useRef","longestPath","then","m","getResources","r","getSystems","s","matchingProduction","findBestMatches","distanceMarks","marks","Array","Math","round","keys","push","tableConfigs","rowData","current","queryLoader","LinearProgress","Modal","open","disableClearable","getOptionLabel","system","max","min","step","v","ref","createMuiTheme","type","App","ThemeProvider","CssBaseline","Container","maxWidth","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.82df3a2d.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function usePersistedState(key, defaultValue) {\n  const [state, setState] = useState(\n    () => JSON.parse(localStorage.getItem(key)) || defaultValue\n  );\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUIAutocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { Grid, TextField } from '@material-ui/core';\n\nfunction Autocomplete({ label, limit, ...rest }) {\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <MUIAutocomplete\n        {...rest}\n        filterOptions={createFilterOptions({limit})}\n        renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n      />\n    </Grid>\n  );\n}\n\nAutocomplete.defaultProps = {\n  limit: 100,\n};\n\nAutocomplete.propTypes = {\n  getOptionLabel: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  limit: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default Autocomplete;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Chip,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from '@material-ui/core';\n\nfunction renderValue(values) {\n  return (\n    <Grid container spacing={1}>\n      {values.map((value) => (\n        <Grid item key={value}>\n          <Chip label={value} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nfunction SelectWithChips({ id, label, onChange, options, ...rest }) {\n  const labelId = `${id}-label`;\n\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <FormControl fullWidth>\n        <InputLabel id={labelId}>{label}</InputLabel>\n        <Select\n          {...rest}\n          displayEmpty\n          id={id}\n          labelId={labelId}\n          multiple\n          onChange={(event) => onChange(event, event.target.value)}\n          renderValue={renderValue}\n        >\n          {options.map((option) => (\n            <MenuItem\n              key={option}\n              value={option}\n            >\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Grid>\n  );\n}\n\nSelectWithChips.propTypes = {\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default SelectWithChips;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Grid,\n  InputLabel,\n  Slider as MUISlider,\n} from '@material-ui/core';\n\nfunction Slider({ label, ...rest }) {\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <InputLabel>{label}</InputLabel>\n      <MUISlider {...rest} />\n    </Grid>\n  );\n}\n\nSlider.defaultProps = {\n  valueLabelDisplay: 'auto',\n};\n\nSlider.propTypes = {\n  label: PropTypes.string,\n  marks: PropTypes.array,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  step: PropTypes.number,\n  value: PropTypes.any.isRequired,\n  valueLabelDisplay: PropTypes.string,\n};\n\nexport default Slider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TableCell,\n  TableRow,\n} from '@material-ui/core';\n\nfunction PaginatedRow({ columns, data, page, rowsPerPage }) {\n  const startIndex = page * rowsPerPage;\n  const endIndex = startIndex + rowsPerPage;\n\n  return data.slice(startIndex, endIndex).map((row, rowIndex) => (\n    <TableRow key={rowIndex}>\n      {columns.map((column, columnIndex) => {\n        const attribute = row[column.dataKey];\n        const display = column.display ? column.display(attribute) : attribute;\n\n        const style = {};\n        if (column.width) style.width = column.width;\n\n        return (\n          <TableCell\n            align={column.numeric || false ? 'right' : 'left'}\n            key={columnIndex}\n            style={style}\n          >\n            {display}\n          </TableCell>\n        );\n      })}\n    </TableRow>\n  ));\n}\n\nPaginatedRow.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nexport default PaginatedRow;","import React, { useMemo, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n} from '@material-ui/core';\n\nimport { TableHeader, PaginatedRow } from './';\n\nfunction PaginatedTable({ columns, data }) {\n  const [direction, setDirection] = useState(\n    columns && columns[0].sortDirection ? columns[0].sortDirection : 'asc'\n  );\n  const [orderBy, setOrderBy] = useState(columns.length ? columns[0].dataKey : undefined);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => setPage(0), [data]);\n\n  const sortedData = useMemo(() => {\n    return [...data].sort((a, b) => {\n      const modifier = direction === 'asc' ? 1 : -1;\n\n      if (a[orderBy] === b[orderBy]) {\n        return 0;\n      } else {\n        return a[orderBy] > b[orderBy] ? 1 * modifier : -1 * modifier;\n      }\n    });\n  }, [data, direction, orderBy]);\n\n  function handleChangeRowsPerPage(event) {\n    const startIndex = page * rowsPerPage;\n    const newRowsPerPage = event.target.value;\n    const newPage = startIndex / newRowsPerPage;\n    setPage(newPage);\n    setRowsPerPage(newRowsPerPage);\n  }\n\n  function handleChangeSort(orderBy, direction) {\n    setOrderBy(orderBy);\n    setDirection(direction);\n  }\n\n  return (\n    <Grid item xs={12} md={12} lg={12}>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {columns.map((column, index) => (\n                <TableHeader\n                  column={column}\n                  direction={direction}\n                  key={index}\n                  onChangeSort={handleChangeSort}\n                  orderBy={orderBy}\n                />\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <PaginatedRow\n              columns={columns}\n              data={sortedData}\n              page={page}\n              rowsPerPage={rowsPerPage}\n            />\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        component=\"div\"\n        count={data.length}\n        onChangePage={(event, value) => setPage(value)}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Grid>\n  );\n}\n\nPaginatedTable.defaultProps = {\n  columns: [],\n  data: [],\n};\n\nPaginatedTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n};\n\nexport default PaginatedTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TableCell,\n  TableSortLabel,\n} from '@material-ui/core';\n\nfunction TableHeader({\n  column,\n  direction,\n  onChangeSort,\n  orderBy,\n\n  // deconstructing the following avoid React warnings\n  columnData,\n  dataKey,\n  disableSort,\n  sortBy,\n\n  ...rest\n}) {\n  const active = orderBy === column.dataKey;\n\n  const cellProps = {\n      align: column.numeric || false ? 'right' : 'left',\n      key: column.dataKey,\n      sortDirection: active ? direction : false,\n  };\n\n  if (column.sortable) {\n    cellProps.children = (\n      <TableSortLabel\n        active={active}\n        direction={active ? direction : 'asc'}\n        onClick={() => onChangeSort(column.dataKey, active ? (direction === 'asc' ? 'desc' : 'asc') : 'asc')}\n      >\n        {column.label}\n      </TableSortLabel>\n    );\n  } else {\n    cellProps.children = column.label;\n  }\n  \n  return <TableCell {...rest} {...cellProps} />;\n}\n\nTableHeader.propTypes = {\n  column: PropTypes.object.isRequired,\n  direction: PropTypes.string.isRequired,\n  onChangeSort: PropTypes.func.isRequired,\n  orderBy: PropTypes.string.isRequired,\n};\n\nexport default TableHeader;","import React, { useCallback, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AutoSizer,\n  Column,\n  Table,\n} from 'react-virtualized';\nimport {\n  TableCell,\n  Typography\n} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/styles';\nimport classNames from 'classnames';\n\nimport { TableHeader } from './';\n\nconst useStyles = makeStyles((theme) => createStyles({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  },\n  root: {\n    // height = screen height - grid padding\n    height: `calc(100vh - (${theme.spacing(4)}px * 3))`,\n    marginBottom: theme.spacing(4)\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // https://github.com/bvaughn/react-virtualized/issues/454\n    '& .ReactVirtualized__Table__headerRow': {\n      flip: false,\n      paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined,\n    },\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[800],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  title: {\n    marginLeft: theme.spacing(1),\n    width: 'max-content',\n  },\n  noClick: {\n    cursor: 'initial',\n  },\n}));\n\nfunction VirtualizedTable({\n  columns,\n  data,\n  headerHeight,\n  onRowClick,\n  rowHeight,\n  title,\n  selectedId\n}) {\n  const classes = useStyles();\n\n  const [direction, setDirection] = useState(\n    columns && columns[0].sortDirection ? columns[0].sortDirection : 'asc'\n  );\n  const [orderBy, setOrderBy] = useState(columns.length ? columns[0].dataKey : undefined);\n\n  const sortedData = useMemo(() => {\n    return [...data].sort((a, b) => {\n      const modifier = direction === 'asc' ? 1 : -1;\n\n      if (a[orderBy] === b[orderBy]) {\n        return 0;\n      } else {\n        return a[orderBy] > b[orderBy] ? 1 * modifier : -1 * modifier;\n      }\n    });\n  }, [data, direction, orderBy]);\n\n  const cellClasses = classNames(\n    classes.tableCell,\n    classes.flexContainer,\n    {\n      [classes.noClick]: onRowClick == null,\n    },\n  );\n\n  const getRowClassName = useCallback(({ index }) => {\n    return classNames(\n      classes.tableRow,\n      classes.flexContainer,\n      {\n        [classes.tableRowHover]: index !== -1 && onRowClick != null,\n      },\n    );\n  }, [classes, onRowClick]);\n\n  const renderCell = useCallback(({ cellData, columnIndex }) => {\n    return (\n      <TableCell\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\n        component=\"div\"\n        className={cellClasses}\n        style={{ height: rowHeight }}\n        variant=\"body\"\n      >\n        {cellData}\n      </TableCell>\n    )\n  }, [cellClasses, columns, rowHeight]);\n\n  const renderHeader = useCallback(({ column, ...rest }) => {\n    return (\n      <TableHeader\n        className={classNames(classes.tableCell, classes.flexContainer, classes.noClick)}\n        column={column}\n        component=\"div\"\n        style={{ height: headerHeight }}\n        variant=\"head\"\n        {...rest}\n      >\n        {column.label}\n      </TableHeader>\n    );\n  }, [classes, headerHeight]);\n\n  function handleChangeSort(orderBy, direction) {\n    setOrderBy(orderBy);\n    setDirection(direction);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AutoSizer>\n        {({ height: screenHeight, width: screenWidth }) => {\n          return (\n            <>\n              <Typography\n                className={classes.title}\n                gutterBottom\n                variant=\"h5\"\n              >\n                {title}\n              </Typography>\n              <Table\n                className={classes.table}\n                gridStyle={{ direction: 'inherit' }}\n                headerHeight={headerHeight}\n                height={screenHeight}\n                noRowsRenderer={() => <div>No results.</div>}\n                rowClassName={getRowClassName}\n                rowCount={sortedData.length}\n                rowGetter={({index}) => sortedData[index]}\n                rowHeight={rowHeight}\n                width={screenWidth}\n                sortBy={orderBy}\n                style={{height: screenWidth > screenHeight ? screenHeight : screenHeight}}\n                rowStyle={({index}) => index > -1 && sortedData[index].id === selectedId ? {backgroundColor: '#666'} : {undefined}}\n                onRowClick={onRowClick}\n              >\n                {columns.map((column, index) => {\n                  const rendererProps = {\n                    column,\n                    direction,\n                    onChangeSort: handleChangeSort,\n                    orderBy,\n                  };\n\n                  return (\n                    <Column\n                      cellRenderer={renderCell}\n                      className={classes.flexContainer}\n                      dataKey={column.dataKey}\n                      headerRenderer={(headerProps) => renderHeader({ ...rendererProps, ...headerProps })}\n                      key={index}\n                      width={Number.isInteger(column.width) ? column.width : column.width * screenWidth}\n                    />\n                  )\n                })}\n              </Table>\n            </>\n          );\n        }}\n      </AutoSizer>\n    </div>\n  );\n}\n\nVirtualizedTable.defaultProps = {\n  columns: [],\n  data: [],\n  headerHeight: 48,\n  rowHeight: 48,\n  selectedId: 0\n};\n\nVirtualizedTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number,\n  selectedId: PropTypes.number,\n};\n\nexport default VirtualizedTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  Paper,\n  Tab as MUITab,\n  Tabs as MUITabs,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  root: {\n    maxHeight: '100vh',\n  },\n  paper: {\n    flexGrow: 1,\n  },\n};\n\n// function Tabs({ children, tabs }) {\nclass Tabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentTab: 0,\n    };\n\n    this.setCurrentTab = this.setCurrentTab.bind(this);\n  }\n\n  setCurrentTab(currentTab) {\n    this.setState({ currentTab });\n  }\n\n  render() {\n    const { children, classes, subNav, tabs } = this.props;\n    const { currentTab } = this.state;\n\n    return (\n      <Grid\n        className={classes.root}\n        item\n        lg={12}\n        md={12}\n        xs={12}\n      >\n        <Paper className={classes.paper}>\n          <MUITabs\n            centered\n            onChange={(event, index) => this.setCurrentTab(index)}\n            value={currentTab}\n            variant=\"fullWidth\"\n          >\n            {tabs.map((tab, index) => (\n              <MUITab\n                key={index}\n                label={tab.label}\n              />\n            ))}\n          </MUITabs>\n        </Paper>\n        {subNav}\n        {children[currentTab]}\n      </Grid>\n    );\n  }\n}\n\nTabs.defaultProps = {\n  children: [],\n  tabs: [],\n};\n\nTabs.propTypes = {\n  children: PropTypes.array.isRequired,\n  subNav: PropTypes.node,\n  tabs: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(Tabs);\n","import React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  LinearProgress,\n  Modal,\n  Grid,\n  Typography,\n  useMediaQuery,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport * as Comlink from 'comlink';\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Query from 'worker-loader!../../data/query';\nimport usePersistedState from '../../helpers/usePersistedStorage';\nimport {\n  Autocomplete,\n  SelectWithChips,\n  Slider,\n} from '../common/form';\nimport { VirtualizedTable } from '../common/table';\nimport { Tabs } from '../common/tabs';\nimport renderSystemColumns from './renderSystemColumns';\nimport renderOverviewColumns from './renderOverviewColumns';\n\nconst query = Comlink.wrap(new Query());\n\nconst useStyles = makeStyles({\n  pageLoading: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  test: {\n    height: 10,\n    width: 120,\n  }\n});\n\nfunction PlanetaryProductionPage() {\n  // console.log(\"render Planetary Production Page\");\n  const [baseSystem, setBaseSystem] = usePersistedState('baseSystem', 0);\n  const [distanceRange, setDistanceRange] = usePersistedState('distanceRange', [0, 10]);\n  const [securityRange, setSecurityRange] = usePersistedState('securityRange', [0.5, 1.0]);\n  const [richnessRange, setRichnessRange] = usePersistedState('richnessRange', [90, 200]);\n  const [resources, setResources] = usePersistedState('resources', ['Lustering Alloy']);\n  const [planetology, setPlanetology] = usePersistedState('planetology', 1);\n  const [roundTripJumps, setRoundTripJumps] = usePersistedState('roundTrips', 50);\n  const [bestMatches, setBestMatches] = useState([]);\n  const [working, setWorking] = useState(false);\n  const [distanceMax, setDistanceMax] = useState(65);\n  const [resourceNames, setResourceNames] = useState(['Lustering Alloy']);\n  const [systems, setSystems] = useState([]);\n  const [matches, setMatches] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [selectedId, setSelectedId] = useState(0);\n  // console.log(baseSystem, distanceRange, securityRange, richnessRange, resources);\n\n  const isSmallScreen = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n  const classes = useStyles();\n  const tabRef = useRef(null);\n  \n  useEffect(() => { query.longestPath(baseSystem).then(m => setDistanceMax(m)) }, [baseSystem]);\n  useEffect(() => { query.getResources().then(r => setResourceNames(r)) }, []);\n  useEffect(() => { query.getSystems().then(s => setSystems(s)) }, []);\n\n  useEffect(() => {\n    query.matchingProduction(baseSystem, distanceRange, securityRange, richnessRange, resources)\n      .then(m => {setMatches(m); setDetails(m);});\n  }, [baseSystem, distanceRange, securityRange, resources, richnessRange]);\n\n  useEffect(() => {\n    query.findBestMatches(matches, baseSystem, resources, planetology, roundTripJumps, Comlink.proxy(setBestMatches), Comlink.proxy(setWorking))\n  }, [matches, baseSystem, resources, planetology, roundTripJumps]);\n\n  const distanceMarks = useMemo(() => {\n    const marks = [...Array(Math.round(distanceMax / 10)).keys()].map((value) => ({ value: value * 10, label: value * 10 }));\n    if (marks[-1] !== distanceMax) {\n      marks.push({ value: distanceMax, label: distanceMax });\n    }\n    return marks;\n  }, [distanceMax]);\n\n  const tableConfigs = useMemo(() => [\n    {\n      Component: VirtualizedTable,\n      columns: renderOverviewColumns(),\n      data: bestMatches,\n      label: 'Best Matches',\n      selectedId,\n      onRowClick: ({rowData}) => {\n        setDetails(rowData.matches);\n        setSelectedId(rowData.id);\n        if (tabRef && tabRef.current) {\n          tabRef.current.setCurrentTab(1);\n        }\n      },\n      title: isSmallScreen ?  undefined : 'Best Matches',\n    },\n    {\n      Component: VirtualizedTable,\n      columns: renderSystemColumns(),\n      data: details,\n      label: 'Details',\n      title: isSmallScreen ? undefined : 'Details',\n    },\n  ], [bestMatches, details, isSmallScreen]);\n\n  const queryLoader = (\n    <Grid item xs={12}>\n      <LinearProgress value={100} variant={working ? 'indeterminate' : 'determinate'}/>\n    </Grid>\n  );\n\n  if (systems.length === 0) {\n    return (\n      <Modal className={classes.pageLoading} open>\n        <>\n          <Typography variant=\"h5\" gutterBottom>Loading...</Typography>\n          <div className={classes.test} >\n            <LinearProgress />\n          </div>\n        </>\n      </Modal>\n    );\n  }\n\n  return (\n    <Grid container spacing={4}>\n\n      <Grid item xs={12} md={12} lg={12}>\n        <Typography variant=\"h4\" width={1}>EVE Echoes</Typography>\n        <Typography variant=\"h5\" width={1}>Planetary Production</Typography>\n      </Grid>\n\n      <Autocomplete\n        disableClearable\n        getOptionLabel={(option) => systems[option].label}\n        label=\"Base System\"\n        onChange={(event, value) => setBaseSystem(value)}\n        options={systems.map((system, index) => index)}\n        value={baseSystem}\n      />\n\n      <Slider\n        label=\"Distance to System (jumps)\"\n        marks={distanceMarks}\n        max={distanceMax}\n        min={0}\n        onChange={(event, value) => setDistanceRange(value)}\n        step={1}\n        value={distanceRange}\n      />\n\n      <Slider\n        label=\"System Security\"\n        marks={[{ value:-1.0, label: '-1.0' }, { value: 0, label: '0.0' }, { value:0.5, label:'0.5' }, { value:1, label: '1.0' }]}\n        max={1.0}\n        min={-1.0}\n        onChange={(event, value) => setSecurityRange(value)}\n        step={0.1}\n        value={securityRange}\n      />\n\n      <SelectWithChips\n        id=\"resources\"\n        label=\"Resource Types\"\n        onChange={(event, value) => setResources(value)}\n        options={resourceNames}\n        value={resources}\n      />\n\n      <Slider\n        label=\"Resource Richness\"\n        marks={[{ value:25, label: '25' }, { value: 100, label: 'high sec' }, { value:133, label:'low sec' }, { value:200, label: '200' }]}\n        max={200}\n        min={25}\n        onChange={(event, value) => setRichnessRange(value)}\n        step={1}\n        value={richnessRange}\n      />\n\n      <Slider\n        label=\"Planets (Planetology max development)\"\n        marks={[{ value:1, label: '1' }, { value: 6, label: '6' }]}\n        max={6}\n        min={1}\n        onChange={(event, value) => setPlanetology(value)}\n        step={1}\n        value={planetology}\n      />\n\n      <Slider\n        label=\"Max Round Trip length (jumps)\"\n        marks={[0, 50, 100, 150, 200].map(v=> ({value: v, label: `${v}`}))}\n        max={200}\n        min={0}\n        onChange={(event, value) => setRoundTripJumps(value)}\n        step={1}\n        value={roundTripJumps}\n      />\n\n      {isSmallScreen\n        ? (\n          <Tabs ref={tabRef} tabs={tableConfigs} subNav={queryLoader}>\n            {tableConfigs.map(({ Component, ...tab }, index) => (\n              <Component key={index} {...tab} />\n            ))}\n          </Tabs>\n        )\n        : (\n          <>\n            {queryLoader}\n            {tableConfigs.map(({ Component, ...tab }, index) => (\n              <Grid key={index} item md={6}>\n                <Component {...tab} />\n              </Grid>\n            ))}\n          </>\n        )\n      }\n\n    </Grid>\n  );\n}\n\nexport default PlanetaryProductionPage;\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/query.d41e3f5d.worker.js\");\n}\n","export default function renderOverviewColumns() {\n  return [\n    {\n      dataKey: 'totalRichness',\n      label: 'Total Richness',\n      sortable: true,\n      sortDirection: 'desc',\n      width: 0.25,\n    },\n    {\n      dataKey: 'roundTrip',\n      label: 'Round Trip',\n      numeric: true,\n      sortable: true,\n      width: 0.25,\n    },\n    {\n      dataKey: 'planets',\n      label: 'Planets',\n      numeric: true,\n      sortable: true,\n      width: 0.25,\n    },\n    {\n      dataKey: 'systems',\n      label: 'Systems',\n      numeric: true,\n      sortable: true,\n      width: 0.25,\n    },\n  ];\n}\n","export default function renderSystemColumns() {\n  return [\n    // render pattern:\n    // {\n    //   dataKey: 'attributeName' // specify attribute\n    //   display: (data) => `${data}`, // optional: specify cell's display\n    //   label: 'Header Name', // specify column label,\n    //   sortable: true, // optional; boolean\n    // column width:\n    // - integer = px\n    // - float/fraction = percentage of screen width\n    //   width: 100, \n    // },\n    {\n      dataKey: 'resource',\n      label: 'Resource',\n      sortable: true,\n      width: 0.29,\n    },\n    {\n      dataKey: 'planet',\n      label: 'Planet',\n      sortable: true,\n      width: 0.29,\n    },\n    {\n      dataKey: 'security',\n      label: 'Security',\n      numeric: true,\n      sortable: true,\n      width: 0.14,\n    },\n    {\n      dataKey: 'jumps',\n      label: 'Jumps',\n      numeric: true,\n      sortable: true,\n      width: 0.14,\n    },\n    {\n      dataKey: 'richness',\n      label: 'Richness',\n      numeric: true,\n      sortable: true,\n      width: 0.14,\n    },\n  ];\n}","import React from 'react';\nimport { Container, CssBaseline } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport PlanetaryProductionPage from './components/planetaryProduction/PlanetaryProductionPage';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" style={{ marginTop: 16 }}>\n        <PlanetaryProductionPage />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}